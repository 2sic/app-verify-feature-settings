@inherits ToSic.Sxc.Dnn.RazorComponent
@using DotNetNuke.Framework.JavaScriptLibraries;
@using DotNetNuke.Framework;
@using System.Linq;
@using ToSic.Sxc.Data;

@{ Settings.SetDebug(true); }

<h1>Tests</h1>

<ol>
  <li><a href='@Link.To(parameters: "webresources/true")'>Web Resources</a></li>
  <li><a href='@Link.To(parameters: "images/true")'>Images</a></li>
  <li><a href='@Link.To(parameters: "viewapp/true")'>View-App Stuff</a></li>
  <li><a href='@Link.To(parameters: "linkimg/true")'>Link IMG Stuff</a></li>
</ol>

<h3>Todo: split into more isolated files for better testing</h3>

<hr>

test
@{
  var siteEmpty = Settings.GetSource("Site");

}

@siteEmpty.x / @siteEmpty.EntityId

<hr>



Images (override): @Settings.Images.News.Quality <br>

Lightbox (fallback) quality: @Settings.Images.Lightbox.Quality



<div @Edit.TagToolbar(Content)>
    <h1>Retest AppSettings</h1>
    App.Settings.Title: @App.Settings.Title <br>
    <h1>Test global settings</h1>
    @{
    
        var globSet = ToSic.Eav.Configuration.Global.SystemSettings;
        var dynSet = AsDynamic(globSet);
        Settings.SetDebug(true);
    }
    
    Settings: "@globSet" (should be IEntity) | "@dynSet" (should be IDynamicEntity) | @dynSet.EntityId | @dynSet.GoogleMaps <br>

    Google Maps: @dynSet.GoogleMaps.Count | @dynSet.GoogleMaps.SettingsIdentifier | @dynSet.GoogleMaps.InitialZoom <br>
    
    Settings GoogleMaps: @Settings.GoogleMaps <br>
    


    Settings Zoom: @Settings.GoogleMaps.InitialZoom <br>
    Settings ApiKey: @Settings.GoogleMaps.ApiKey <br>

    Show warning: @Settings.GoogleMaps.ShowApiKeyWarning <br>
    
    <hr>
    
    SiteColor from SiteSettings: @Settings.SiteColor
    
    <hr>
    <h2>QuickEdit</h2>
    
    Settings.QuickEdit: @Settings.QuickEdit <br>
    Settings.QuickEdit.Items: @Settings.QuickEdit.Items <br>

    Settings.QuickEdit.Items.Move (of Default): @Settings.QuickEdit.Items.Move <br>
    
    Settings.QuickEdit.InnerContentDynamic: @Settings.QuickEdit.InnerContentDynamic <br>
    Settings.QuickEdit.InnerContentDynamic.Enable: @Settings.QuickEdit.InnerContentDynamic.Enable <br>

    Settings.QuickEdit.Default: @Settings.QuickEdit.Default <br>
    Settings.QuickEdit.Default.Enable: @Settings.QuickEdit.Default.Enable <br>
    
    Settings.QuickEdit.InnerContentDynamic.Move: @Settings.QuickEdit.InnerContentDynamic.Move <br>
    
    <hr>
    <h3>Foreach Test using property</h3>
    <ol>
    @foreach(var part in Settings.QuickEdit.Items) {
        <li>    @part.EntityTitle </li>
    }
    </ol>
    <h3>Foreach Test using AsList</h3>
    <ol>
    @foreach(var part in AsList(Settings.QuickEdit.Items)) {
        <li>    @part.EntityTitle </li>
    }
    </ol>
  

    
</div>