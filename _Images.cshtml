@inherits Custom.Hybrid.Razor12
@using DotNetNuke.Framework.JavaScriptLibraries;
@using DotNetNuke.Framework;
@using System.Linq;
@using ToSic.Sxc.Data;
@using ToSic.Sxc.Services;

@{ 
  Settings.SetDebug(true);
  var imgSvc = GetService<IImageService>();
}

<div @Edit.TagToolbar(Content)>
  <a href="@Link.To()">&lt; back</a>
  <h1>Settings.Images</h1>

  <h2>Get Images.Lightbox infos (only Quality set on App SystemSettings)</h2>
  @ShowImageSettings(Settings.Images.Lightbox, "Lightbox", 2000, 1500, 70)


  <h2>Get Images.News infos (overwritten on App SystemSettings)</h2>
  @ShowImageSettings(Settings.Images.News, "News", 222, 111, 77)

  <h2>News image</h2>
  @{
    var itemWithImage = AsDynamic(App.Data["ItemWithImage"].List.First());
  }
  @imgSvc.Img(field: itemWithImage.Field("Image") /* "test.jpg" */, settings: "News", factor: "1").ToString()
  <br>

  @Link.Image(url: "test.jpg", settings: "News", factor: 1)
  <br>
  @Link.Image(url: "test.jpg", settings: Settings.Images.News, factor: 0.5)
  <br>
  @Link.Image(url: "test.jpg", settings: Settings.Images.News, factor: 0.3)

  <h2>Content image</h2>
  @imgSvc.Img(field: itemWithImage.Field("Image"), factor: "1").ToString()
  <br>


  <h2>Get Images.Content infos (overwritten on App SystemSettings)</h2>
  @* @try { *@
    @ShowImageSettings(Settings.Images.Content, "Content", 555, 222, 33)
  @* } catch {
    <h1>error</h1>
  } *@

  <h2>Get Images.Screen infos (from Default)</h2>
  @* @try { *@
    @ShowImageSettings(Settings.Images.Screen, "Screen", 2000, 1500, 60)
  @* } catch {
    <h1>error</h1>
  } *@

  <h2>Resources from Settings.Images (list depends on overloads)</h2>
  @try{
    <ol>
      @foreach(var img in Settings.Images.Items) {
          <li>@img.EntityTitle (Width: @img.Width, Height: @img.Height, Quality: @img.Quality)</li>
      }
    </ol>
  } catch {
    <h1>error</h1>
  }

  <h2>Resources from Settings[PresetSystem].Images (list depends on overloads)</h2>
  @try{
    <ol>
      @foreach(var img in Settings.GetSource("PresetSystem").Images.Items) {
          <li>@img.EntityTitle (Width: @img.Width, Height: @img.Height, Quality: @img.Quality)</li>
      }
    </ol>
  } catch {
    <h1>error</h1>
  }

</div>

@helper ShowImageSettings(dynamic imgSettings, string expTitle, int expWidth, int expHeight, int expQuality) {
  <ul>
    <li>Name: @imgSettings.EntityTitle (@expTitle)</li>
    <li>Width: @imgSettings.Width @ShowNumOk(imgSettings.Width, expWidth)</li>
    <li>Height: @imgSettings.Height @ShowNumOk(imgSettings.Height, expHeight)</li>
    <li>Quality: @imgSettings.Quality @ShowNumOk(imgSettings.Quality, expQuality)</li>
  </ul>
}

@helper ShowNumOk(dynamic found, int expected) {
  <text>@((found == expected) ? "✅" : "⚠️ " + expected)  </text>
}